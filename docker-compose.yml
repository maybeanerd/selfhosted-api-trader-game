version: '3.9'

# name the resulting compose project after the name of the instance
# this enables us to easily host multiple instances on a single machine
name: ${INSTANCE_NAME:-self-hosted-api-trader-game}

services:
  traefik:
    image: 'traefik:v3.0.4'
    container_name: 'Reverse-Proxy'
    command:
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    ports:
      - 80:80
    depends_on:
      - backend
      - frontend
    restart: always
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - internal

  backend:
    build: ./backend
    image: ${IMAGE_NAME}
    depends_on:
      - database
    networks:
      - internal
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.backend.rule=PathRegexp(`\/(api|\.well-known).*`)'
      - 'traefik.http.services.backend.loadbalancer.server.port=8080'
    environment:
      - INSTANCE_NAME=${INSTANCE_NAME}
      - DATABASE_HOST=database
      # TODO this should be the same as the reverse proxy address, once we have it
      - BASE_URL=http://localhost

  frontend:
    build:
      context: ./frontend
      args:
        - COMMIT_HASH=abcdefg
    image: ${IMAGE_NAME_FRONTEND}
    depends_on:
      - backend
    networks:
      - internal
    environment:
      - INSTANCE_NAME=${INSTANCE_NAME}
      - DATABASE_HOST=database
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=PathPrefix(`/`)'
      - 'traefik.http.services.frontend.loadbalancer.server.port=3000'

  database:
    image: postgres:16.3
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: nest
    restart: always
    ports:
      - 5432:5432
    networks:
      - internal
    volumes:
      - db-data:/var/lib/postgresql/data

volumes:
  db-data:

networks:
  internal:
