version: '3.9'

# name the resulting compose project after the name of the instance
# this enables us to easily host multiple instances on a single machine
name: ${INSTANCE_NAME:-self-hosted-api-trader-game}

services:
  gameserver:
    build: .
    image: ${IMAGE_NAME}
    depends_on:
      - database
    networks:
      - internal
    ports:
      - 3000:3000
    environment:
      - INSTANCE_NAME=${INSTANCE_NAME}
      - DATABASE_HOST=database

  database:
    image: mongo:6
    command: --replSet rs0 # create a replica set to allow for things like transactions
    environment:
      MONGO_INITDB_DATABASE: nest
    restart: always
    networks:
      - internal
    ports:
      - 27017:27017
    volumes:
      - db-data:/data/db

  # Initilize the replica set once the database is up
  db-init:
    image: mongo:6
    depends_on:
      - database
    networks:
      - internal
    restart: 'no'
    entrypoint:
      ['bash', '-c', "mongosh --host database:27017 --eval 'rs.initiate()'"]

  proxy:
    image: caddy:2
    restart: always
    networks:
      - internal
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

#  authserver:
#    image: oryd/kratos:v0.11
#    restart: always
#    networks:
#      - default

volumes:
  db-data:
  caddy_data:
  caddy_config:

networks:
  internal:
