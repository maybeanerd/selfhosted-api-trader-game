import { SupportedObjectType } from '@/modules/crossroads/activitypub/object/';
import {
  jsonb,
  pgEnum,
  pgTable,
  text,
  timestamp,
  uuid,
} from 'drizzle-orm/pg-core';

export const activityPubObjectType = pgEnum(
  'activityPubObjectType',
  Object.values(SupportedObjectType) as [string, ...Array<string>],
);

export const activityPubObject = pgTable('activityPubObject', {
  id: text('id').primaryKey(),
  // TODO find out if maybe removing internalIDs and replacing them with "externalId"
  // in th game object that references an AP object might be nicer

  /**
   * If the object exists on this server it will have an internalId
   * which will be mapped to the id in the corresponding table
   * (e.g. a note to the trade)
   *
   * All objects need to be mappable to a game object.
   *
   * If created on this server, by convention it should be the same as
   * the uuid used as part of the id of the AP object
   *
   * If received from another server, it will be a uuid generated by this server
   */
  internalId: uuid('internalId').unique().notNull(),

  type: activityPubObjectType('type').$type<SupportedObjectType>().notNull(),
  published: timestamp('published').notNull(),
  attributedTo: text('attributedTo').notNull(),
  content: text('content').notNull(),
  gameContent: jsonb('gameContent').notNull(),
  inReplyTo: text('inReplyTo'),
  to: text('to').notNull(),
});

export type ActivityPubObject = typeof activityPubObject.$inferSelect;
export type NewActivityPubObject = typeof activityPubObject.$inferInsert;
